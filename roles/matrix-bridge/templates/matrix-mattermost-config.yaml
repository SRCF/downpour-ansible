# Port for incoming slack requests from webhooks and event API messages.
slack_hook_port: {{ matrix_mattermost_webhook_port }}
# Prefix of incoming requests to strip when handing. This is NOT the bind host
  #NOTE: Unlike most of the other urls, this one cannot use localhost,
  #as this one must be publicly visible to the slack API
inbound_uri_prefix: "http://127.0.0.1:{{ matrix_mattermost_webhook_port }}/"

# Both of the above options are optional if using RTM (see below), required otherwise.

# Optional if slack_hook_port and inbound_uri_prefix are defined, required otherwise.
rtm:
  # Use the RTM API to listen for requests, which does not require
  # the bridge to listen on the hook port.
  # You should leave this enabled, unless you plan to use the
  # bridge exclusively for webhooks.
  enable: false
  logging: "silent" # Logging level specific to RTM traffic.

# The prefix to give slack users
username_prefix: "mattermost_" # Required
display_name_suffix: "[mm]"

homeserver: # Required
  # The domain name of your homeserver
  server_name: {{ domain }}
  # The URL which the bridge server can reach the homeserver on.
  # You can use localhost so long as the bridge and homeserver are
  # hosted on the same machine
  # 8008 is assumed to be the port the homeserver listens on
  url: https://{{ domain }}
  # Optional. Used to specify the port of the appservice in the config, rather than the cli.
  # If this is defined, it will **override** the port given in the process arguments.
  appservice_port: {{ matrix_mattermost_port }}

# Optional
logging:
  console: "error" # One of "debug", "info", "warning", "error", "silent"
   # Files that the bridge may log into. The key is the minimum level to report.

# Settings for database connections.
# Optional if using "nedb", as it's the assumed default.
db:
  # Which database engine to use.
  engine: "postgres" # "postgres" or "nedb". If using "nedb", do not define connectionString
  connectionString: "postgresql:///matrix-mattermost?host=/run/postgresql" # A postgres connection string

matrix_admin_room: "{{ slackbot_admin_room.meta.room_id }}"
# Enable metrics reporting on http://0.0.0.0:bridgePort/metrics which can be scraped by prometheus
# Optional
enable_metrics: false


provisioning:
  enabled: true
  # Should the bridge deny users bridging channels to private rooms.
  require_public_room: true
  # Should the bridge allow usesr to bridge private channels.
  allow_private_channels: true
  limits:
    room_count: 20
    team_count: 1

puppeting:
  # Should the bridge allow users to puppet their accounts
  enabled: false

bot_profile: # Set the bot's profile on startup, optional
  displayname: Mattermost Bridge # Set the displayname, optional
